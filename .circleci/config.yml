version: 2.1
orbs:
  node: circleci/node@4.2.0
  go: circleci/go@1.6.0
jobs:
  build:
    executor:
      name: go/default
      tag: '1.14'
    steps:
      - checkout
      - go/load-cache
      - go/mod-download
      - go/save-cache
      - run:
          name: install-tools
          command: |
            go get -u github.com/mitchellh/gox
      - run:
          name: cross compile
          command: |
            # workaround for https://github.com/semantic-release/semantic-release/issues/753
            export NEXT_VERSION=$(npx semantic-release --dry-run | grep 'The next release version is' | sed -E 's/.* ([[:digit:].]+)$/\1/')
            if [ "${NEXT_VERSION}" ]; then
              export VERSION=${NEXT_VERSION}
            else
              export VERSION=${NEXT_VERSION}
            fi
            echo "set version to ${VERSION}"
            gox -ldflags "-X 'main.Version=${VERSION}'" -os="linux darwin windows" -arch="amd64" -output="dist/${CIRCLE_PROJECT_REPONAME}_{{.OS}}_{{.Arch}}"
            ./dist/go-template-project_linux_amd64 &
            curl localhost:8000/version
      - persist_to_workspace:
          name: save distributions
          root: .
          paths:
            - ./dist
  publish:
    executor: node/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          command: |
            npm install
      - run:
          name: release
          command: |
            npx semantic-release
workflows:
  build:
    jobs:
      - build
  publish:
    jobs:
      - build:
         filters:
           branches:
             only: master
      - publish:
          filters:
            branches:
              only: master
          context: semantics-release
          requires:
            - build
